# This file overrides gradle.properties from the project
# See docker run command for details
### GC
# We use ParallelGC instead of default G1:
# - In the abstract it's suited for bigger throughput than G1
# - It has less footprint than default G1.
#   ParallelGC adds up to ~4% of heap size (Xmx), G1 - ~9%
#   (according to summary report of Native Memory Tracking - Java Heap and GC - committed metric)
# - Can't return committed memory to OS, but inside disposable container it's not needed.
# - Supports UseGCOverheadLimit, G1 - doesn't: https://bugs.openjdk.java.net/browse/JDK-8212084
# - GC limits have chosen as heuristics to fail faster: https://docs.oracle.com/javase/8/docs/technotes/guides/vm/gc-ergonomics.html
org.gradle.jvmargs=-Xmx16g -XX:+UseParallelGC -XX:+UseGCOverheadLimit -XX:GCTimeLimit=10 -Dfile.encoding=UTF-8
# org.gradle.workers.max is limited on container level
# Be careful with additional properties here.
# Most of them causes daemon process crash on startup
# https://youtrack.jetbrains.com/issue/KT-48843
systemProp.kotlin.daemon.jvm.options=-Xmx9G
org.gradle.unsafe.configuration-cache=false
org.gradle.unsafe.configuration-cache-problems=fail
avito.gradle.buildCache.remote.push=true
avito.gradle.buildCache.local.enabled=false
# For more hermetic builds in containers
android.builder.sdkDownload=false
